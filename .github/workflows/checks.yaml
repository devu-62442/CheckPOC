name: Check Markdown Files

on:
  push:
    branches:
      - master   # This will run the action every Sunday at midnight

jobs:
  check-markdown-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get date 1 month ago
        id: get_cutoff_date
        run: echo "::set-output name=cutoff::$(date -d '1 month ago' +%Y-%m-%d)"

      - name: Find outdated Markdown files
        id: find_outdated_files
        run: |
          # Get the cutoff date from the previous step
          CUTOFF_DATE="${{ steps.get_cutoff_date.outputs.cutoff }}"

          # Initialize an empty variable to store outdated files
          OUTDATED_FILES=""

          # Loop through all .md files and check their last commit date
          for file in $(git ls-files '*.md'); do
            # Get the last commit date of the file
            LAST_COMMIT_DATE=$(git log -1 --format=%ci -- $file | cut -d' ' -f1)

            echo $LAST_COMMIT_DATE
            
            # Check if the last commit date is older than 1 month
            if [[ "$LAST_COMMIT_DATE" < "$CUTOFF_DATE" ]]; then
              OUTDATED_FILES=$file
              echo $OUTDATED_FILES
              echo "!!!!!!" 
            fi
          done

          echo $OUTDATED_FILES
          echo "----"
          
          # Set the output variable with the list of outdated files
          if [[ -n "$OUTDATED_FILES" ]]; then
            echo "Outdated files found: $OUTDATED_FILES"
            echo "::set-output name=outdated::true"
            echo "::set-output name=filelist::${OUTDATED_FILES}"
          else
            echo "No outdated Markdown files."
            echo "::set-output name=outdated::false"
          fi
